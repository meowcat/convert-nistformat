- action: order
  order: 
  - Name
  - Synon
  - "Precursor_type"
  - "Instrument_type"
  - "Collision_energy"
  - "PrecursorMZ"
  - Formula
  - SMILES
  - "MW"
  - "CASNO"
  - "ID"
  - "Comment"
  - "Ion_mode"
  - "Instrument"
  - "Ionization"
  - "Collision_gas"
  - "Sample_inlet"
  - "Spectrum_type"
  - InChIKey
  
- action: split
  source: Notes
  read: ';\s?'
  write: '; '
  target: '*comments'
# - action: mapping
#   explicit: true
#   source: Comment_
#   target: Comment_Table
# - action: nesting
#   source: Comment_
#   prefix: 'COM@'
#   read: '(.*?)=(.*)'
#   write: '{key}={value}'
- action: mutate
  params:
    - source: '*InChIKey'
      target: [ inchikey, collisionEnergy ]
      write: '{inchikey}-{collisionEnergy}'
    - source: '*Name'
      target: [ 'Name_', collisionEnergy ]
      write: "{Name_}@{collisionEnergy}"
- action: crossmap
  source: ['Name_', '*Synon']
  target: '*synonyms'
  read_split: {synonyms: "*"}
  write_split: {'Name_': '1', Synon: '*'}
- action: tabular
  source: comments
  regex: "^(?:(\\w*)=)?(.*)$" # captures key=value or value_only, thanks Alexis
  write: "{key}{ifelse(key!='','=','')}{value}"
- action: extract
  source: '*Collision_energy'
  target: ['cePrefix', '*collisionEnergy', '*collisionEnergyUnit']
  read: '(.*?)([0-9]+)\s?(.*)'
  write: '{cePrefix}{collisionEnergy} {collisionEnergyUnit}'
  # debug: write
- action: translate
  params:
  - source: '*Ion_mode'
    target: '*polarity'
    dictionary:
    - {value: 1, read: 'P', write: 'P'}
    - {value: 0, read: 'N', write: 'N'}
  - source: '*Spectrum_type'
    target: '*msLevel'
    dictionary:
    - {value: 1, read: 'MS1', write: 'MS1'}
    - {value: 2, read: 'MS2', write: 'MS2'}
    - {value: 3, read: 'MS3', write: 'MS3'}
  - source: '*Instrument_type'
    target: 'instrument_type_ms'
    dictionary:
    - {value: 'QTOF', read: 'Q-TOF', write: 'Q-TOF'}
    - {value: 'QFT', read: 'HCD', write: 'HCD'}
    - {value: 'ITFT', read: 'IT-FT/ion trap with FTMS', write: 'IT-FT/ion trap with FTMS'}
    #- {value: 3, read: 'MS3', write: 'MS3'}
- action: mutate
  source: [instrument_type_ms, '*Ionization']
  target: '*instrument_type'
  read: "{Ionization}-{instrument_type_ms}"
  write: 
    Ionization: '{str_split_i(instrument_type, "-", -2)}'
    instrument_type_ms: '{str_split_i(instrument_type, "-", -1)}'
- action: mapping
  params:
  - { source: 'Name', target: 'title'}
  #- { source: 'COM@RT', target: 'rtime'}
  #- { source: 'Synon', target: 'synonyms'}
  - { source: '*ExactMass', target: 'exactmass'}
  - { source: '*PrecursorMZ', target: 'precursorMz'}
  - { source: '*Precursor_type', target: 'adduct' }
  - { source: '*Instrument', target: 'instrument' }
  #- { source: 'Instrument_type', target: 'instrument_type' }
  - { source: '*Sample_inlet', target: 'gradient' }
  - { source: '*Ionization', target: 'ionization' }
  #- { source: '*InChIKey', target: 'inchikey' }
  - { source: '*SMILES', target: 'smiles' }
  - { source: '*Formula', target: 'formula' }
  #- { source: 'MW', target: '' }
  - { source: '*CASNO', target: 'cas' }
  - { source: '*ID', target: 'accession' }
- action: default
  params:
  - { target: '*msLevel', read: 2 }
  - { target: '*precursorCharge', read: 1 }
  - { target: "*authors", read: "NIST Mass Spectrometry Data Center"}
  - { target: "*license", read: "NIST license"}
  - { target: "*copyright", read: "NIST Mass Spectrometry Data Center"}
  - { target: "*prefix", read: 'MSBNK-NIST-N'}
  - { source: "cePrefix", write: 'NCE '}
  - { source: "collisionEnergyUnit", write: ''}
- action: type
  params:
  - { field: 'prefix', type: 'character' }
  - { field: 'nistid', type: 'integer' }
  - { field: 'exactmass', type: 'numeric' }

- action: type
  defaults: TRUE  



#colnames(d)
# [1] "msLevel"                 "rtime"                   "acquisitionNum"          "scanIndex"               "dataStorage"            
# [6] "dataOrigin"              "centroided"              "smoothed"                "polarity"                "precScanNum"            
#[11] "precursorMz"             "precursorIntensity"      "precursorCharge"         "collisionEnergy"         "isolationWindowLowerMz" 
#[16] "isolationWindowTargetMz" "isolationWindowUpperMz"  "spectrum_id"             "spectrum_name"           "date"                   
#[21] "authors"                 "license"                 "copyright"               "publication"             "splash"                 
#[26] "compound_id"             "adduct"                  "ionization"              "ionization_voltage"      "fragmentation_mode"     
#[31] "collision_energy_text"   "instrument"              "instrument_type"         "formula"                 "exactmass"              
#[36] "smiles"                  "inchi"                   "inchikey"                "cas"                     "pubchem"                
#[41] "synonym"                 "precursor_mz_text"       "compound_name"          

